#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ '–£—Ä–æ–∫–∏ –ò—Å–ª–∞–º–∞'
–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import asyncio
import os
import sys
from datetime import datetime
import uuid

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

try:
    from supabase_client import supabase_client
    from models import *
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    sys.exit(1)

async def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase...")
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        print("üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...")
        admin_count = await supabase_client.count_records("admin_users")
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ {admin_count} –∞–¥–º–∏–Ω–æ–≤.")
        
        # 2. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        admin = await supabase_client.find_one("admin_users", {"username": "admin"})
        if not admin:
            print("üë§ –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
            admin_data = {
                "id": str(uuid.uuid4()),
                "username": "admin",
                "email": "admin@uroki-islama.ru",
                "full_name": "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                "role": "admin",
                "is_active": True,
                "created_at": datetime.utcnow().isoformat()
            }
            await supabase_client.create_record("admin_users", admin_data)
            print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: admin@uroki-islama.ru / admin123")
        else:
            print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω: {admin['email']}")
            
        # 3. –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        team_count = await supabase_client.count_records("team_members")
        if team_count == 0:
            print("üë• –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É...")
            team_members = [
                {
                    "id": str(uuid.uuid4()),
                    "name": "–ê–ª–∏ –ï–≤—Ç–µ–µ–≤",
                    "subject": "–≠—Ç–∏–∫–∞",
                    "image_url": "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=400&fit=crop&crop=face",
                    "bio": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∏—Å–ª–∞–º—Å–∫–æ–π —ç—Ç–∏–∫–µ –∏ –Ω—Ä–∞–≤—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏",
                    "order": 1,
                    "is_active": True,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                },
                {
                    "id": str(uuid.uuid4()),
                    "name": "–ê–±–¥—É–ª—å-–ë–∞—Å–∏—Ç –ú–∏–∫—É—à–∫–∏–Ω", 
                    "subject": "–û—Å–Ω–æ–≤—ã –≤–µ—Ä—ã",
                    "image_url": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop&crop=face",
                    "bio": "–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Å–Ω–æ–≤–∞–º –∏—Å–ª–∞–º—Å–∫–æ–π –≤–µ—Ä—ã –∏ –¥–æ–≥–º–∞—Ç–∏–∫–µ",
                    "order": 2,
                    "is_active": True,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                },
                {
                    "id": str(uuid.uuid4()),
                    "name": "–ê–ª–µ–∫—Å–µ–π –ö–æ—Ç–µ–Ω–µ–≤",
                    "subject": "–ü—Ä–∞–∫—Ç–∏–∫–∞ –≤–µ—Ä—ã",
                    "image_url": "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=400&fit=crop&crop=face",
                    "bio": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –∞—Å–ø–µ–∫—Ç–∞–º –∏—Å–ª–∞–º–∞",
                    "order": 3,
                    "is_active": True,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                },
                {
                    "id": str(uuid.uuid4()),
                    "name": "–ú–∏–∫–∞–∏–ª—å –ì–∞–Ω–∏–µ–≤",
                    "subject": "–ò—Å—Ç–æ—Ä–∏—è",
                    "image_url": "https://images.unsplash.com/photo-1519345182560-3f2917c472ef?w=400&h=400&fit=crop&crop=face",
                    "bio": "–ò—Å—Ç–æ—Ä–∏–∫ –∏—Å–ª–∞–º–∞ –∏ –∏—Å–ª–∞–º—Å–∫–æ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏",
                    "order": 4,
                    "is_active": True,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                }
            ]
            
            for member in team_members:
                await supabase_client.create_record("team_members", member)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(team_members)} —á–ª–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥—ã")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {team_count} —á–ª–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥—ã")
            
        # 4. –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        courses_count = await supabase_client.count_records("courses")
        if courses_count == 0:
            print("üìö –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–∫—É—Ä—Å—ã...")
            
            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å
            course_data = {
                "id": str(uuid.uuid4()),
                "title": "–û—Å–Ω–æ–≤—ã –∏—Å–ª–∞–º–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
                "slug": "osnovy-islama-dlya-nachinayushchih",
                "description": "–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤ –∏—Å–ª–∞–º—Å–∫–æ–π –≤–µ—Ä—ã. –í–∫–ª—é—á–∞–µ—Ç –∏–∑—É—á–µ–Ω–∏–µ –ø—è—Ç–∏ —Å—Ç–æ–ª–ø–æ–≤ –∏—Å–ª–∞–º–∞, –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –≤–µ—Ä—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ä–µ–ª–∏–≥–∏–∏.",
                "level": "level_1",
                "teacher_id": str(uuid.uuid4()),
                "teacher_name": "–ê–ª–∏ –ï–≤—Ç–µ–µ–≤",
                "status": "published",
                "difficulty": "–õ–µ–≥–∫–æ",
                "estimated_duration_hours": 3,
                "lessons_count": 0,
                "tests_count": 0,
                "order": 1,
                "created_at": datetime.utcnow().isoformat(),
                "updated_at": datetime.utcnow().isoformat()
            }
            
            created_course = await supabase_client.create_record("courses", course_data)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∫—É—Ä—Å: {created_course['title']}")
            
            # –°–æ–∑–¥–∞–µ–º —É—Ä–æ–∫–∏
            lessons_data = [
                {
                    "id": str(uuid.uuid4()),
                    "course_id": created_course["id"],
                    "title": "–ß—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–ª–∞–º?",
                    "slug": "chto-takoe-islam",
                    "description": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤—ã –∏—Å–ª–∞–º—Å–∫–æ–π –≤–µ—Ä—ã –∏ –µ—ë –ø—Ä–∏–Ω—Ü–∏–ø—ã",
                    "content": """<div class="lesson-content">
                    <h2>–ß—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–ª–∞–º?</h2>
                    <p>–ò—Å–ª–∞–º - —ç—Ç–æ –º–æ–Ω–æ—Ç–µ–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–ª–∏–≥–∏—è, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ—Ä–æ–∫–æ–º –ú—É—Ö–∞–º–º–∞–¥–æ–º (–º–∏—Ä –µ–º—É) –≤ VII –≤–µ–∫–µ –Ω–∞—à–µ–π —ç—Ä—ã –≤ –ê—Ä–∞–≤–∏–∏.</p>
                    
                    <h3>–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏—Å–ª–∞–º–∞:</h3>
                    <ul>
                    <li><strong>–ï–¥–∏–Ω–æ–±–æ–∂–∏–µ (–¢–∞—É—Ö–∏–¥)</strong> - –≤–µ—Ä–∞ –≤ –µ–¥–∏–Ω–æ–≥–æ –ë–æ–≥–∞ (–ê–ª–ª–∞—Ö–∞)</li>
                    <li><strong>–ü—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ</strong> - –≤–µ—Ä–∞ –≤ –ø–æ—Å–ª–∞–Ω–Ω–∏–∫–æ–≤ –ê–ª–ª–∞—Ö–∞</li>
                    <li><strong>–°–≤—è—â–µ–Ω–Ω—ã–µ –ø–∏—Å–∞–Ω–∏—è</strong> - –≤–µ—Ä–∞ –≤ –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏—è</li>
                    <li><strong>–°—É–¥–Ω—ã–π –¥–µ–Ω—å</strong> - –≤–µ—Ä–∞ –≤ –∑–∞–≥—Ä–æ–±–Ω—É—é –∂–∏–∑–Ω—å</li>
                    </ul>
                    
                    <h3>–ü—è—Ç—å —Å—Ç–æ–ª–ø–æ–≤ –∏—Å–ª–∞–º–∞:</h3>
                    <ol>
                    <li><strong>–®–∞—Ö–∞–¥–∞</strong> - —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –≤–µ—Ä—ã</li>
                    <li><strong>–°–∞–ª—è—Ç</strong> - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–æ–ª–∏—Ç–≤—ã (5 —Ä–∞–∑ –≤ –¥–µ–Ω—å)</li>
                    <li><strong>–ó–∞–∫—è—Ç</strong> - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
                    <li><strong>–°–∞—É–º</strong> - –ø–æ—Å—Ç –≤ –º–µ—Å—è—Ü –†–∞–º–∞–¥–∞–Ω</li>
                    <li><strong>–•–∞–¥–∂</strong> - –ø–∞–ª–æ–º–Ω–∏—á–µ—Å—Ç–≤–æ –≤ –ú–µ–∫–∫—É</li>
                    </ol>
                    
                    <p>–ò—Å–ª–∞–º –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –∫ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏, –º–∏–ª–æ—Å–µ—Ä–¥–∏—é –∏ —Å–ª—É–∂–µ–Ω–∏—é –ë–æ–≥—É —á–µ—Ä–µ–∑ –ø–æ–∫–ª–æ–Ω–µ–Ω–∏–µ –∏ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞.</p>
                    </div>""",
                    "lesson_type": "text",
                    "order": 1,
                    "is_published": True,
                    "estimated_duration_minutes": 20,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                },
                {
                    "id": str(uuid.uuid4()),
                    "course_id": created_course["id"],
                    "title": "–ü—è—Ç—å —Å—Ç–æ–ª–ø–æ–≤ –∏—Å–ª–∞–º–∞",
                    "slug": "pyat-stolpov-islama",
                    "description": "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –ø—è—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω–∞",
                    "content": """<div class="lesson-content">
                    <h2>–ü—è—Ç—å —Å—Ç–æ–ª–ø–æ–≤ –∏—Å–ª–∞–º–∞</h2>
                    <p>–ü—è—Ç—å —Å—Ç–æ–ª–ø–æ–≤ –∏—Å–ª–∞–º–∞ - —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω–∞.</p>
                    
                    <h3>1. –®–∞—Ö–∞–¥–∞ (–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –≤–µ—Ä—ã)</h3>
                    <p>"–ù–µ—Ç –±–æ–∂–µ—Å—Ç–≤–∞, –∫—Ä–æ–º–µ –ê–ª–ª–∞—Ö–∞, –∏ –ú—É—Ö–∞–º–º–∞–¥ - –ï–≥–æ –ø–æ—Å–ª–∞–Ω–Ω–∏–∫"</p>
                    <p>–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –∏—Å–ø–æ–≤–µ–¥–∞–Ω–∏–µ –≤–µ—Ä—ã –≤ –∏—Å–ª–∞–º–µ.</p>
                    
                    <h3>2. –°–∞–ª—è—Ç (–ú–æ–ª–∏—Ç–≤–∞)</h3>
                    <p>–ú—É—Å—É–ª—å–º–∞–Ω–µ –º–æ–ª—è—Ç—Å—è –ø—è—Ç—å —Ä–∞–∑ –≤ –¥–µ–Ω—å:</p>
                    <ul>
                    <li>–§–∞–¥–∂—Ä - —É—Ç—Ä–µ–Ω–Ω—è—è –º–æ–ª–∏—Ç–≤–∞</li>
                    <li>–ó—É—Ö—Ä - –ø–æ–ª—É–¥–µ–Ω–Ω–∞—è –º–æ–ª–∏—Ç–≤–∞</li>
                    <li>–ê—Å—Ä - –ø–æ—Å–ª–µ–ø–æ–ª—É–¥–µ–Ω–Ω–∞—è –º–æ–ª–∏—Ç–≤–∞</li>
                    <li>–ú–∞–≥—Ä–∏–± - –≤–µ—á–µ—Ä–Ω—è—è –º–æ–ª–∏—Ç–≤–∞</li>
                    <li>–ò—à–∞ - –Ω–æ—á–Ω–∞—è –º–æ–ª–∏—Ç–≤–∞</li>
                    </ul>
                    
                    <h3>3. –ó–∞–∫—è—Ç (–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)</h3>
                    <p>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ 2.5% –æ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π –Ω—É–∂–¥–∞—é—â–∏–º—Å—è.</p>
                    
                    <h3>4. –°–∞—É–º (–ü–æ—Å—Ç)</h3>
                    <p>–ü–æ—Å—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –†–∞–º–∞–¥–∞–Ω –æ—Ç —Ä–∞—Å—Å–≤–µ—Ç–∞ –¥–æ –∑–∞–∫–∞—Ç–∞.</p>
                    
                    <h3>5. –•–∞–¥–∂ (–ü–∞–ª–æ–º–Ω–∏—á–µ—Å—Ç–≤–æ)</h3>
                    <p>–ü–∞–ª–æ–º–Ω–∏—á–µ—Å—Ç–≤–æ –≤ –ú–µ–∫–∫—É, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ —Å–ø–æ—Å–æ–±–µ–Ω.</p>
                    </div>""",
                    "lesson_type": "text",
                    "order": 2,
                    "is_published": True,
                    "estimated_duration_minutes": 25,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                }
            ]
            
            lesson_ids = []
            for lesson_data in lessons_data:
                created_lesson = await supabase_client.create_record("lessons", lesson_data)
                lesson_ids.append(created_lesson["id"])
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —É—Ä–æ–∫: {created_lesson['title']}")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç—ã –¥–ª—è —É—Ä–æ–∫–æ–≤
            for i, lesson_id in enumerate(lesson_ids):
                test_data = {
                    "id": str(uuid.uuid4()),
                    "title": f"–¢–µ—Å—Ç –∫ —É—Ä–æ–∫—É {i+1}",
                    "description": f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —É—Ä–æ–∫—É {i+1}",
                    "course_id": created_course["id"],
                    "lesson_id": lesson_id,
                    "time_limit_minutes": 15,
                    "passing_score": 70,
                    "max_attempts": 3,
                    "is_published": True,
                    "order": i+1,
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                }
                
                created_test = await supabase_client.create_record("tests", test_data)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç: {created_test['title']}")
                
                # –°–æ–∑–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
                if i == 0:  # –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–∫–∞
                    questions = [
                        {
                            "id": str(uuid.uuid4()),
                            "test_id": created_test["id"],
                            "text": "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–ª–ø–æ–≤ –∏—Å–ª–∞–º–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç?",
                            "question_type": "single_choice",
                            "options": [
                                {"id": str(uuid.uuid4()), "text": "3", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "4", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "5", "is_correct": True},
                                {"id": str(uuid.uuid4()), "text": "6", "is_correct": False}
                            ],
                            "points": 1,
                            "order": 1
                        },
                        {
                            "id": str(uuid.uuid4()),
                            "test_id": created_test["id"],
                            "text": "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–≤—è—â–µ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ –º—É—Å—É–ª—å–º–∞–Ω?",
                            "question_type": "single_choice",
                            "options": [
                                {"id": str(uuid.uuid4()), "text": "–¢–æ—Ä–∞", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "–ë–∏–±–ª–∏—è", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "–ö–æ—Ä–∞–Ω", "is_correct": True},
                                {"id": str(uuid.uuid4()), "text": "–í–µ–¥—ã", "is_correct": False}
                            ],
                            "points": 1,
                            "order": 2
                        },
                        {
                            "id": str(uuid.uuid4()),
                            "test_id": created_test["id"],
                            "text": "–ö—Ç–æ –æ—Å–Ω–æ–≤–∞–ª –∏—Å–ª–∞–º?",
                            "question_type": "single_choice",
                            "options": [
                                {"id": str(uuid.uuid4()), "text": "–ò–∏—Å—É—Å", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "–ú—É—Ö–∞–º–º–∞–¥", "is_correct": True},
                                {"id": str(uuid.uuid4()), "text": "–ú–æ–∏—Å–µ–π", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "–ë—É–¥–¥–∞", "is_correct": False}
                            ],
                            "points": 1,
                            "order": 3
                        }
                    ]
                else:  # –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–∫–∞
                    questions = [
                        {
                            "id": str(uuid.uuid4()),
                            "test_id": created_test["id"],
                            "text": "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –≤–µ—Ä—ã –≤ –∏—Å–ª–∞–º–µ?",
                            "question_type": "single_choice",
                            "options": [
                                {"id": str(uuid.uuid4()), "text": "–®–∞—Ö–∞–¥–∞", "is_correct": True},
                                {"id": str(uuid.uuid4()), "text": "–°–∞–ª—è—Ç", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "–ó–∞–∫—è—Ç", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "–•–∞–¥–∂", "is_correct": False}
                            ],
                            "points": 1,
                            "order": 1
                        },
                        {
                            "id": str(uuid.uuid4()),
                            "test_id": created_test["id"],
                            "text": "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å –º—É—Å—É–ª—å–º–∞–Ω–µ –¥–æ–ª–∂–Ω—ã –º–æ–ª–∏—Ç—å—Å—è?",
                            "question_type": "single_choice",
                            "options": [
                                {"id": str(uuid.uuid4()), "text": "3", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "4", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "5", "is_correct": True},
                                {"id": str(uuid.uuid4()), "text": "6", "is_correct": False}
                            ],
                            "points": 1,
                            "order": 2
                        },
                        {
                            "id": str(uuid.uuid4()),
                            "test_id": created_test["id"],
                            "text": "–ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–∫—è—Ç?",
                            "question_type": "single_choice",
                            "options": [
                                {"id": str(uuid.uuid4()), "text": "1%", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "2.5%", "is_correct": True},
                                {"id": str(uuid.uuid4()), "text": "5%", "is_correct": False},
                                {"id": str(uuid.uuid4()), "text": "10%", "is_correct": False}
                            ],
                            "points": 1,
                            "order": 3
                        }
                    ]
                
                for question in questions:
                    await supabase_client.create_record("questions", question)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞")
            
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {courses_count} –∫—É—Ä—Å–æ–≤")
            
        # 5. –°–æ–∑–¥–∞–µ–º Q&A –≤–æ–ø—Ä–æ—Å—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        qa_count = await supabase_client.count_records("qa_questions")
        if qa_count == 0:
            print("‚ùì –°–æ–∑–¥–∞–µ–º Q&A –≤–æ–ø—Ä–æ—Å—ã...")
            qa_questions = [
                {
                    "id": str(uuid.uuid4()),
                    "title": "–ú–æ–∂–Ω–æ –ª–∏ –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω—É –µ—Å—Ç—å —Ö–∞–ª—è–ª—å –º—è—Å–æ?",
                    "question_text": "–Ø –Ω–æ–≤–∏—á–æ–∫ –≤ –∏—Å–ª–∞–º–µ. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ö–∞–ª—è–ª—å –º—è—Å–æ? –ß—Ç–æ –µ—Å–ª–∏ –≤ –º–æ–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç —Ö–∞–ª—è–ª—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤?",
                    "answer_text": "–î–∞, –º—É—Å—É–ª—å–º–∞–Ω–∞–º –ø—Ä–µ–¥–ø–∏—Å–∞–Ω–æ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ö–∞–ª—è–ª—å –ø–∏—â—É. –≠—Ç–æ –æ–¥–∏–Ω –∏–∑ –≤–∞–∂–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∏—Å–ª–∞–º–∞. –ï—Å–ª–∏ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ—Ç —Ö–∞–ª—è–ª—å –º—è—Å–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Ä—ã–±–µ, –æ–≤–æ—â–∞–º –∏ –¥—Ä—É–≥–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å —Ö–∞–ª—è–ª—å –ø—Ä–æ–¥—É–∫—Ç—ã —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.",
                    "category": "fiqh",
                    "tags": ["—Ö–∞–ª—è–ª—å", "–ø–∏—Ç–∞–Ω–∏–µ", "—Ñ–∏–∫—Ö"],
                    "slug": "mozhno-li-musulmaninu-est-halyal-myaso",
                    "is_featured": True,
                    "views_count": 0,
                    "imam_name": "–ò–º–∞–º –ê–ª–∏",
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                },
                {
                    "id": str(uuid.uuid4()),
                    "title": "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ–º–æ–≤–µ–Ω–∏–µ?",
                    "question_text": "–ú–æ–∂–µ—Ç–µ –æ–±—ä—è—Å–Ω–∏—Ç—å, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ–º–æ–≤–µ–Ω–∏–µ (–≤—É–¥—É) –ø–µ—Ä–µ–¥ –º–æ–ª–∏—Ç–≤–æ–π?",
                    "answer_text": "–û–º–æ–≤–µ–Ω–∏–µ (–≤—É–¥—É) —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ: 1) –ù–∞–º–µ—Ä–µ–Ω–∏–µ, 2) –ü—Ä–æ–∏–∑–Ω–µ—Å–µ–Ω–∏–µ '–ë–∏—Å–º–∏–ª–ª—è—Ö', 3) –ú—ã—Ç—å–µ —Ä—É–∫ –¥–æ –∑–∞–ø—è—Å—Ç–∏–π, 4) –ü–æ–ª–æ—Å–∫–∞–Ω–∏–µ —Ä—Ç–∞, 5) –ü—Ä–æ–º—ã–≤–∞–Ω–∏–µ –Ω–æ—Å–∞, 6) –ú—ã—Ç—å–µ –ª–∏—Ü–∞, 7) –ú—ã—Ç—å–µ —Ä—É–∫ –¥–æ –ª–æ–∫—Ç–µ–π, 8) –ü—Ä–æ—Ç–∏—Ä–∞–Ω–∏–µ –≥–æ–ª–æ–≤—ã, 9) –ú—ã—Ç—å–µ –Ω–æ–≥ –¥–æ —â–∏–∫–æ–ª–æ—Ç–æ–∫. –ö–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è —Ç—Ä–∏ —Ä–∞–∑–∞.",
                    "category": "ibadah",
                    "tags": ["–æ–º–æ–≤–µ–Ω–∏–µ", "–≤—É–¥—É", "–º–æ–ª–∏—Ç–≤–∞"],
                    "slug": "kak-pravilno-sovershat-omovenie",
                    "is_featured": True,
                    "views_count": 0,
                    "imam_name": "–ò–º–∞–º –ú—É—Ö–∞–º–º–∞–¥",
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                },
                {
                    "id": str(uuid.uuid4()),
                    "title": "–ß—Ç–æ —á–∏—Ç–∞—Ç—å –≤ –º–æ–ª–∏—Ç–≤–µ –Ω–æ–≤–∏—á–∫—É?",
                    "question_text": "–Ø —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é –∏–∑—É—á–∞—Ç—å –∏—Å–ª–∞–º. –ß—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –Ω–∞–∏–∑—É—Å—Ç—å –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–ª–∏—Ç–≤—ã?",
                    "answer_text": "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã—É—á–∏—Ç—å: 1) –°—É—Ä—É '–ê–ª—å-–§–∞—Ç–∏—Ö–∞' (–ø–µ—Ä–≤–∞—è —Å—É—Ä–∞ –ö–æ—Ä–∞–Ω–∞), 2) –õ—é–±—É—é –∫–æ—Ä–æ—Ç–∫—É—é —Å—É—Ä—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ê–ª—å-–ò—Ö–ª—è—Å'), 3) –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã –º–æ–ª–∏—Ç–≤—ã ('–ê–ª–ª–∞—Ö—É –∞–∫–±–∞—Ä', '–°—É–±—Ö–∞–Ω–∞ —Ä–∞–±–±–∏–π–∞–ª—å-–∞–∑—ã–º', '–°—É–±—Ö–∞–Ω–∞ —Ä–∞–±–±–∏–π–∞–ª—å-–∞–ª—è'). –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –¥—Ä—É–≥–∏–µ –¥—É–∞ –∏ —Å—É—Ä—ã.",
                    "category": "ibadah",
                    "tags": ["–º–æ–ª–∏—Ç–≤–∞", "—Å–∞–ª—è—Ç", "–Ω–æ–≤–∏—á–æ–∫"],
                    "slug": "chto-chitat-v-molitve-novichku",
                    "is_featured": False,
                    "views_count": 0,
                    "imam_name": "–ò–º–∞–º –ê–ª–∏",
                    "created_at": datetime.utcnow().isoformat(),
                    "updated_at": datetime.utcnow().isoformat()
                }
            ]
            
            for qa in qa_questions:
                await supabase_client.create_record("qa_questions", qa)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(qa_questions)} Q&A –≤–æ–ø—Ä–æ—Å–æ–≤")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {qa_count} Q&A –≤–æ–ø—Ä–æ—Å–æ–≤")
            
        print("\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:")
        print("üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@uroki-islama.ru / admin123")
        print("üë• –°—Ç—É–¥–µ–Ω—Ç: –ª—é–±–æ–π email (—Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)")
        print("\nüåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:")
        print("üìö –ö—É—Ä—Å—ã –∏ —É—Ä–æ–∫–∏")
        print("‚ùì –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –∏–º–∞–º–∞")
        print("üë• –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ")
        print("üèÜ –°–∏—Å—Ç–µ–º–∞ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(init_database())